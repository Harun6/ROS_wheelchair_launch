<?xml version="1.0"?>
<launch>


  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find project_ws)/urdf/wheel2.urdf"/>
  <arg name="x" default="4.5"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="1.0"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find project_ws)/world/house.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <!--arg name="world_name" value="world/mud.world"/-->
    <arg name="headless" value="$(arg headless)"/>
    </include>
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 1.0 -unpause -urdf -model robot -param robot_description -x $(arg x) -y $(arg y) -z $(arg z)"  respawn="false" output="screen" />
 <!--  OpenCV Node  -->
  <!-- node name="image_converter" pkg="project_ws" type="image_converter"/ -->


  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
  </node>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
  </node>
  <!--node type="rviz" name="rviz" pkg="rviz" args="-d $(find project_ws)/rviz/urdf.rviz"/-->
</launch>
